{"version":3,"file":"mdb-angular-ui-kit-range.js","sources":["../../../projects/mdb-angular-ui-kit/range/range.component.ts","../../../projects/mdb-angular-ui-kit/range/range.module.ts","../../../projects/mdb-angular-ui-kit/range/mdb-angular-ui-kit-range.ts"],"names":[],"mappings":"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","sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostListener,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const RANGE_VALUE_ACCESOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n  useExisting: forwardRef(() => MdbRangeComponent),\n  multi: true,\n};\n@Component({\n  selector: 'mdb-range',\n  templateUrl: 'range.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [RANGE_VALUE_ACCESOR],\n})\nexport class MdbRangeComponent implements ControlValueAccessor, AfterViewInit {\n  @ViewChild('input') input: ElementRef;\n  @ViewChild('thumb') thumb: ElementRef;\n  @ViewChild('thumbValue') thumbValue: ElementRef;\n\n  @Input() id: string;\n  @Input() required: boolean;\n  @Input() name: string;\n  @Input() value: string;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  @Input() label: string;\n  @Input() min = 0;\n  @Input() max = 100;\n  @Input() step: number;\n\n  @Input()\n  get default(): boolean {\n    return this._default;\n  }\n  set default(value: boolean) {\n    this._default = value;\n  }\n  private _default: boolean;\n\n  @Input() defaultRangeCounterClass: string;\n\n  @Output() rangeValueChange = new EventEmitter<any>();\n\n  public visibility = false;\n  public thumbStyle: any;\n\n  @HostListener('change', ['$event']) onchange(event: any): void {\n    this.onChange(event.target.value);\n  }\n\n  @HostListener('input') onInput(): void {\n    this.rangeValueChange.emit({ value: this.value });\n    this.focusRangeInput();\n  }\n\n  constructor(private _cdRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    this.thumbPositionUpdate();\n  }\n\n  focusRangeInput(): void {\n    this.input.nativeElement.focus();\n    this.visibility = true;\n  }\n\n  blurRangeInput(): void {\n    this.input.nativeElement.blur();\n    this.visibility = false;\n  }\n\n  thumbPositionUpdate(): void {\n    const rangeInput = this.input.nativeElement;\n    const inputValue = rangeInput.value;\n    const minValue = rangeInput.min ? rangeInput.min : 0;\n    const maxValue = rangeInput.max ? rangeInput.max : 100;\n    const newValue = Number(((inputValue - minValue) * 100) / (maxValue - minValue));\n\n    this.value = inputValue;\n    this.thumbStyle = { left: `calc(${newValue}% + (${8 - newValue * 0.15}px))` };\n  }\n\n  // Control Value Accessor Methods\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value: any): void {\n    this.value = value;\n\n    this._cdRef.markForCheck();\n\n    setTimeout(() => {\n      this.thumbPositionUpdate();\n    }, 0);\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  static ngAcceptInputType_default: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MdbRangeComponent } from './range.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [MdbRangeComponent],\n  exports: [MdbRangeComponent],\n})\nexport class MdbRangeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {RANGE_VALUE_ACCESOR as Éµa} from './range.component';"]}