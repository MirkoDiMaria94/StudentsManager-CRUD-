{"version":3,"file":"mdb-angular-ui-kit-scrollspy.js","sources":["../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy-link.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy.service.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy-element.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy-window.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy.module.ts","../../../projects/mdb-angular-ui-kit/scrollspy/mdb-angular-ui-kit-scrollspy.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  OnInit,\n  Input,\n  HostListener,\n  HostBinding,\n  ChangeDetectorRef,\n  Inject,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbScrollspyLink]',\n})\nexport class MdbScrollspyLinkDirective implements OnInit {\n  @Input()\n  get scrollIntoView(): boolean {\n    return this._scrollIntoView;\n  }\n  set scrollIntoView(value: boolean) {\n    this._scrollIntoView = value;\n  }\n  private _scrollIntoView = true;\n\n  get section(): HTMLElement {\n    return this._section;\n  }\n  set section(value: HTMLElement) {\n    if (value) {\n      this._section = value;\n    }\n  }\n  private _section: HTMLElement;\n  private _id: string;\n\n  constructor(private cdRef: ChangeDetectorRef, @Inject(DOCUMENT) private document: any) {}\n\n  @Input('mdbScrollspyLink')\n  get id(): string {\n    return this._id;\n  }\n  set id(newId: string) {\n    if (newId) {\n      this._id = newId;\n    }\n  }\n\n  @HostBinding('class.scrollspy-link')\n  scrollspyLink = true;\n\n  @HostBinding('class.active')\n  active = false;\n\n  @HostListener('click', [])\n  onClick(): void {\n    if (this.section && this.scrollIntoView === true) {\n      this.section.scrollIntoView();\n    }\n  }\n\n  detectChanges(): void {\n    this.cdRef.detectChanges();\n  }\n\n  assignSectionToId(): void {\n    this.section = this.document.documentElement.querySelector(`#${this.id}`);\n  }\n\n  ngOnInit(): void {\n    this.assignSectionToId();\n  }\n}\n","import { Injectable, QueryList } from '@angular/core';\nimport { MdbScrollspyLinkDirective } from './scrollspy-link.directive';\nimport { Subject, Observable } from 'rxjs';\n\nexport interface MdbScrollspy {\n  id: string;\n  links: QueryList<MdbScrollspyLinkDirective>;\n}\n\n@Injectable()\nexport class MdbScrollspyService {\n  scrollSpys: MdbScrollspy[] = [];\n\n  private activeSubject = new Subject<MdbScrollspyLinkDirective>();\n  active$: Observable<any> = this.activeSubject;\n\n  addScrollspy(scrollSpy: MdbScrollspy): void {\n    this.scrollSpys.push(scrollSpy);\n  }\n\n  removeScrollspy(scrollSpyId: string): void {\n    const scrollSpyIndex = this.scrollSpys.findIndex((spy) => {\n      return spy.id === scrollSpyId;\n    });\n    this.scrollSpys.splice(scrollSpyIndex, 1);\n  }\n\n  updateActiveState(scrollSpyId: string, activeLinkId: string): void {\n    const scrollSpy = this.scrollSpys.find((spy) => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    const activeLink = scrollSpy.links.find((link) => {\n      return link.id === activeLinkId;\n    });\n\n    this.setActiveLink(activeLink);\n  }\n\n  removeActiveState(scrollSpyId: string, activeLinkId: string): void {\n    const scrollSpy = this.scrollSpys.find((spy) => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    const activeLink = scrollSpy.links.find((link) => {\n      return link.id === activeLinkId;\n    });\n\n    if (!activeLink) {\n      return;\n    }\n\n    activeLink.active = false;\n    activeLink.detectChanges();\n  }\n\n  setActiveLink(activeLink: MdbScrollspyLinkDirective | any): void {\n    if (activeLink) {\n      activeLink.active = true;\n      activeLink.detectChanges();\n      this.activeSubject.next(activeLink);\n    }\n  }\n\n  removeActiveLinks(scrollSpyId: string): void {\n    const scrollSpy: MdbScrollspy | undefined = this.scrollSpys.find((spy) => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    scrollSpy.links.forEach((link) => {\n      link.active = false;\n      link.detectChanges();\n    });\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { MdbScrollspyLinkDirective } from './scrollspy-link.directive';\nimport { MdbScrollspyService } from './scrollspy.service';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[mdbScrollspy]',\n  template: '<ng-content></ng-content>',\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class MdbScrollspyDirective implements OnInit, AfterContentInit, OnDestroy {\n  @ContentChildren(MdbScrollspyLinkDirective, { descendants: true })\n  links: QueryList<MdbScrollspyLinkDirective>;\n\n  readonly _destroy$: Subject<void> = new Subject<void>();\n\n  @Input('mdbScrollspy')\n  get id(): string {\n    return this._id;\n  }\n\n  set id(newId: string) {\n    if (newId) {\n      this._id = newId;\n    }\n  }\n\n  private _id: string;\n\n  @Output() activeLinkChange: EventEmitter<any> = new EventEmitter<any>();\n\n  activeSub: Subscription;\n\n  constructor(private scrollSpyService: MdbScrollspyService) {}\n\n  ngOnInit(): void {\n    this.activeSub = this.scrollSpyService.active$\n      .pipe(takeUntil(this._destroy$), distinctUntilChanged())\n      .subscribe((activeLink) => {\n        this.activeLinkChange.emit(activeLink);\n      });\n  }\n\n  ngAfterContentInit(): void {\n    this.scrollSpyService.addScrollspy({ id: this.id, links: this.links });\n  }\n\n  ngOnDestroy(): void {\n    this.scrollSpyService.removeScrollspy(this.id);\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Renderer2,\n  NgZone,\n  Input,\n  AfterViewInit,\n} from '@angular/core';\nimport { MdbScrollspyService } from './scrollspy.service';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbScrollspyElement]',\n})\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class MdbScrollspyElementDirective implements OnInit, AfterViewInit {\n  private id: string;\n\n  get host(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  @Input() container: HTMLElement;\n\n  @Input('mdbScrollspyElement')\n  get scrollSpyId(): string {\n    return this._scrollSpyId;\n  }\n  set scrollSpyId(newId: string) {\n    if (newId) {\n      this._scrollSpyId = newId;\n    }\n  }\n  private _scrollSpyId: string;\n\n  @Input() offset = 0;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    private scrollSpyService: MdbScrollspyService\n  ) {}\n\n  isElementInViewport(): boolean {\n    const scrollTop = this.container.scrollTop;\n    const elTop = this.host.offsetTop - this.offset;\n    const elHeight = this.host.offsetHeight;\n\n    return scrollTop >= elTop && scrollTop < elTop + elHeight;\n  }\n\n  updateActiveState(scrollSpyId: string, id: string): void {\n    if (this.isElementInViewport()) {\n      this.scrollSpyService.removeActiveLinks(scrollSpyId);\n      this.scrollSpyService.updateActiveState(scrollSpyId, id);\n    }\n  }\n\n  onScroll(): void {\n    this.updateActiveState(this.scrollSpyId, this.id);\n  }\n\n  listenToScroll(): void {\n    this.renderer.listen(this.container, 'scroll', () => {\n      this.onScroll();\n    });\n  }\n\n  ngOnInit(): void {\n    this.id = this.host.id;\n\n    if (!this.container) {\n      this.container = this._getClosestEl(this.host, '.scrollspy-container');\n    }\n\n    this.renderer.setStyle(this.container, 'position', 'relative');\n\n    this.ngZone.runOutsideAngular(this.listenToScroll.bind(this));\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.updateActiveState(this.scrollSpyId, this.id);\n    }, 0);\n  }\n\n  private _getClosestEl(el: any, selector: string): HTMLElement | null {\n    for (; el && el !== document; el = el.parentNode) {\n      if (el.matches && el.matches(selector)) {\n        return el;\n      }\n    }\n    return null;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Inject,\n  Renderer2,\n  NgZone,\n  Input,\n  AfterViewInit,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { MdbScrollspyService } from './scrollspy.service';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbScrollspyWindow]',\n})\nexport class MdbScrollspyWindowDirective implements OnInit, AfterViewInit {\n  private id: string;\n\n  @Input('mdbScrollspyWindow')\n  get scrollSpyId(): string {\n    return this._scrollSpyId;\n  }\n  set scrollSpyId(newId: string) {\n    if (newId) {\n      this._scrollSpyId = newId;\n    }\n  }\n  private _scrollSpyId: string;\n\n  @Input() offset = 0;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    private scrollSpyService: MdbScrollspyService\n  ) {}\n\n  isElementInViewport(): boolean {\n    const scrollTop = this.document.documentElement.scrollTop || this.document.body.scrollTop;\n    const elHeight = this.el.nativeElement.offsetHeight;\n    const elTop = this.el.nativeElement.offsetTop - this.offset;\n    const elBottom = elTop + elHeight;\n\n    return scrollTop >= elTop && scrollTop <= elBottom;\n  }\n\n  updateActiveState(scrollSpyId: string, id: string): void {\n    if (this.isElementInViewport()) {\n      this.scrollSpyService.updateActiveState(scrollSpyId, id);\n    } else {\n      this.scrollSpyService.removeActiveState(scrollSpyId, id);\n    }\n  }\n\n  onScroll(): void {\n    this.updateActiveState(this.scrollSpyId, this.id);\n  }\n\n  listenToScroll(): void {\n    this.renderer.listen(window, 'scroll', () => {\n      this.onScroll();\n    });\n  }\n\n  ngOnInit(): void {\n    this.id = this.el.nativeElement.id;\n\n    this.ngZone.runOutsideAngular(this.listenToScroll.bind(this));\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.updateActiveState(this.scrollSpyId, this.id);\n    }, 0);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MdbScrollspyDirective } from './scrollspy.directive';\nimport { MdbScrollspyLinkDirective } from './scrollspy-link.directive';\nimport { MdbScrollspyElementDirective } from './scrollspy-element.directive';\nimport { MdbScrollspyService } from './scrollspy.service';\nimport { MdbScrollspyWindowDirective } from './scrollspy-window.directive';\n\n@NgModule({\n  declarations: [\n    MdbScrollspyDirective,\n    MdbScrollspyLinkDirective,\n    MdbScrollspyElementDirective,\n    MdbScrollspyWindowDirective,\n  ],\n  exports: [\n    MdbScrollspyDirective,\n    MdbScrollspyLinkDirective,\n    MdbScrollspyElementDirective,\n    MdbScrollspyWindowDirective,\n  ],\n  providers: [MdbScrollspyService],\n})\nexport class MdbScrollspyModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}