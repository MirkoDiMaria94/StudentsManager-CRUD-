{"version":3,"file":"mdb-angular-ui-kit-validation.js","sources":["../../../projects/mdb-angular-ui-kit/validation/validate.directive.ts","../../../projects/mdb-angular-ui-kit/validation/error.directive.ts","../../../projects/mdb-angular-ui-kit/validation/success.directive.ts","../../../projects/mdb-angular-ui-kit/validation/validation.module.ts","../../../projects/mdb-angular-ui-kit/validation/mdb-angular-ui-kit-validation.ts"],"names":["defaultIdNumber"],"mappings":"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","sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbValidate]',\n})\nexport class MdbValidateDirective implements OnInit {\n  private _validate = true;\n  private _validateSuccess = true;\n  private _validateError = true;\n\n  @Input()\n  get mdbValidate(): boolean {\n    return this._mdbValidate;\n  }\n  set mdbValidate(value: boolean) {\n    this._mdbValidate = coerceBooleanProperty(value);\n  }\n  private _mdbValidate: boolean;\n\n  @Input()\n  get validate(): boolean {\n    return this._validate;\n  }\n  set validate(value: boolean) {\n    this._validate = coerceBooleanProperty(value);\n    this.updateErrorClass();\n    this.updateSuccessClass();\n  }\n\n  @Input()\n  get validateSuccess(): boolean {\n    return this._validateSuccess;\n  }\n  set validateSuccess(value: boolean) {\n    this._validateSuccess = coerceBooleanProperty(value);\n    this.updateSuccessClass();\n  }\n\n  @Input()\n  get validateError(): boolean {\n    return this._validateError;\n  }\n  set validateError(value: boolean) {\n    this._validateError = coerceBooleanProperty(value);\n    this.updateErrorClass();\n    this.updateSuccessClass();\n  }\n\n  constructor(private renderer: Renderer2, private _elementRef: ElementRef) {}\n\n  updateSuccessClass(): void {\n    if (this.validate && this.validateSuccess) {\n      this.renderer.addClass(this._elementRef.nativeElement, 'validate-success');\n    } else {\n      this.renderer.removeClass(this._elementRef.nativeElement, 'validate-success');\n    }\n  }\n\n  updateErrorClass(): void {\n    if (this.validate && this.validateError) {\n      this.renderer.addClass(this._elementRef.nativeElement, 'validate-error');\n    } else {\n      this.renderer.removeClass(this._elementRef.nativeElement, 'validate-error');\n    }\n  }\n\n  ngOnInit(): void {\n    this.updateSuccessClass();\n    this.updateErrorClass();\n  }\n\n  static ngAcceptInputType_mdbValidate: BooleanInput;\n  static ngAcceptInputType_validate: BooleanInput;\n  static ngAcceptInputType_validateSuccess: BooleanInput;\n  static ngAcceptInputType_validateError: BooleanInput;\n}\n","import {\n  Input,\n  HostBinding,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  Component,\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nlet defaultIdNumber = 0;\n\n@Component({\n  selector: 'mdb-error',\n  template: '<ng-content></ng-content>',\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class MdbErrorDirective implements OnInit, OnDestroy {\n  @Input() id = `mdb-error-${defaultIdNumber++}`;\n\n  @HostBinding('class.error-message') errorMsg = true;\n  @HostBinding('attr.id') messageId = this.id;\n\n  readonly _destroy$: Subject<void> = new Subject<void>();\n\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {}\n\n  private _getClosestEl(el: any, selector: string): HTMLElement | null {\n    for (; el && el !== document; el = el.parentNode) {\n      if (el.matches && el.matches(selector)) {\n        return el;\n      }\n    }\n    return null;\n  }\n\n  ngOnInit(): void {\n    const textarea = this._getClosestEl(this._elementRef.nativeElement, 'textarea');\n\n    if (textarea) {\n      let height = textarea.offsetHeight + 4 + 'px';\n      this.renderer.setStyle(this._elementRef.nativeElement, 'top', height);\n\n      fromEvent(textarea, 'keyup')\n        .pipe(takeUntil(this._destroy$))\n        .subscribe(() => {\n          height = textarea.offsetHeight + 4 + 'px';\n          this.renderer.setStyle(this._elementRef.nativeElement, 'top', height);\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n}\n","import {\n  Input,\n  HostBinding,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  Component,\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nlet defaultIdNumber = 0;\n\n@Component({\n  selector: 'mdb-success',\n  template: '<ng-content></ng-content>',\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class MdbSuccessDirective implements OnInit, OnDestroy {\n  @Input() id = `mdb-success-${defaultIdNumber++}`;\n\n  @HostBinding('class.success-message') successMsg = true;\n  @HostBinding('attr.id') messageId = this.id;\n\n  readonly _destroy$: Subject<void> = new Subject<void>();\n\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {}\n\n  private _getClosestEl(el: any, selector: string): HTMLElement | null {\n    for (; el && el !== document; el = el.parentNode) {\n      if (el.matches && el.matches(selector)) {\n        return el;\n      }\n    }\n    return null;\n  }\n\n  ngOnInit(): void {\n    const textarea = this._getClosestEl(this._elementRef.nativeElement, 'textarea');\n\n    if (textarea) {\n      let height = textarea.offsetHeight + 4 + 'px';\n      this.renderer.setStyle(this._elementRef.nativeElement, 'top', height);\n\n      fromEvent(textarea, 'keyup')\n        .pipe(takeUntil(this._destroy$))\n        .subscribe(() => {\n          height = textarea.offsetHeight + 4 + 'px';\n          this.renderer.setStyle(this._elementRef.nativeElement, 'top', height);\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MdbErrorDirective } from './error.directive';\nimport { MdbSuccessDirective } from './success.directive';\nimport { MdbValidateDirective } from './validate.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MdbErrorDirective, MdbSuccessDirective, MdbValidateDirective],\n  exports: [MdbErrorDirective, MdbSuccessDirective, MdbValidateDirective],\n})\nexport class MdbValidationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}