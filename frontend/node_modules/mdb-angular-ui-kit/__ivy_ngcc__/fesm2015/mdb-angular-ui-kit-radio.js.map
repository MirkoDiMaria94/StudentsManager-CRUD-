{"version":3,"file":"mdb-angular-ui-kit-radio.js","sources":["../../../projects/mdb-angular-ui-kit/radio/radio-button.directive.ts","../../../projects/mdb-angular-ui-kit/radio/radio-group.directive.ts","../../../projects/mdb-angular-ui-kit/radio/radio.module.ts","../../../projects/mdb-angular-ui-kit/radio/mdb-angular-ui-kit-radio.ts"],"names":[],"mappings":"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","sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbRadio]',\n})\nexport class MdbRadioDirective {\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  private _name: string;\n\n  @Input('checked')\n  get checked(): boolean {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  @Input('value')\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n  }\n  private _value: any = null;\n\n  @Input('disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @HostBinding('disabled')\n  get isDisabled(): boolean {\n    return this._disabled;\n  }\n\n  @HostBinding('checked')\n  get isChecked(): boolean {\n    return this._checked;\n  }\n\n  @HostBinding('attr.name')\n  get nameAttr(): string {\n    return this.name;\n  }\n\n  constructor() {}\n\n  _updateName(value: string): void {\n    this._name = value;\n  }\n\n  _updateChecked(value: boolean): void {\n    this._checked = value;\n  }\n\n  _updateDisabledState(value: boolean): void {\n    this._disabled = value;\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","import {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  forwardRef,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { from, Subject } from 'rxjs';\nimport { startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { MdbRadioDirective } from './radio-button.directive';\n\nexport const MDB_RADIO_GROUP_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n  useExisting: forwardRef(() => MdbRadioGroupDirective),\n  multi: true,\n};\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbRadioGroup]',\n  providers: [MDB_RADIO_GROUP_VALUE_ACCESSOR],\n})\nexport class MdbRadioGroupDirective implements ControlValueAccessor, AfterContentInit, OnDestroy {\n  @ContentChildren(MdbRadioDirective, { descendants: true }) radios: QueryList<MdbRadioDirective>;\n\n  @Input()\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n    if (this.radios) {\n      this._updateChecked();\n    }\n  }\n  private _value: any;\n\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(name: string) {\n    this._name = name;\n    if (this.radios) {\n      this._updateNames();\n    }\n  }\n  private _name: string;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(disabled: boolean) {\n    this._disabled = disabled;\n\n    if (this.radios) {\n      this._updateDisabled();\n    }\n  }\n  private _disabled = false;\n\n  private _destroy$ = new Subject<void>();\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  ngAfterContentInit(): void {\n    this._updateNames();\n    this._updateDisabled();\n\n    this.radios.changes\n      .pipe(\n        startWith(this.radios),\n        switchMap((radios: QueryList<MdbRadioDirective>) => from(Promise.resolve(radios))),\n        takeUntil(this._destroy$)\n      )\n      .subscribe(() => this._updateRadiosState());\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  private _updateRadiosState(): void {\n    this._updateNames();\n    this._updateChecked();\n    this._updateDisabled();\n  }\n\n  private _updateNames(): void {\n    this.radios.forEach((radio: MdbRadioDirective) => radio._updateName(this.name));\n  }\n\n  private _updateChecked(): void {\n    this.radios.forEach((radio: MdbRadioDirective) => {\n      const isChecked = radio.value === this._value;\n      radio._updateChecked(isChecked);\n    });\n  }\n\n  private _updateDisabled(): void {\n    this.radios.forEach((radio: MdbRadioDirective) => radio._updateDisabledState(this._disabled));\n  }\n\n  // Control value accessor methods\n  registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateDisabled();\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n}\n","import { MdbRadioDirective } from './radio-button.directive';\nimport { MdbRadioGroupDirective } from './radio-group.directive';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [MdbRadioDirective, MdbRadioGroupDirective],\n  exports: [MdbRadioDirective, MdbRadioGroupDirective],\n  imports: [CommonModule, FormsModule],\n})\nexport class MdbRadioModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}